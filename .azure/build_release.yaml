trigger:
  branches:
    include:
      - master
      - dev
      - main
  paths:
    include:
      - '*'  # Specify paths to include in triggers if necessary

pr:
  branches:
    include:
      - master
      - dev
      - main

pool:
  vmImage: 'windows-latest'

variables:
  - group: signingSecrets #create this group with SECRET variables `signingUsername` and `signingPassword`
  - group: nugetKeys #create this group with SECRET variables `nugetKey`
  - group: sdkbinNuget
  - name: githubConnectionName
    value: TurboMqttReleases
  - name: projectName
    value: TurboMqtt
  - name: githubRepositoryName
    value: https://github.com/petabridge/TurboMqtt
  - name: buildConfiguration
    value: 'Release'
  - name: productUrl
    value: 'https://turbomqtt.org'

stages:
  - stage: BuildAndSign
    displayName: 'Build and Sign'
    jobs:
      - job: Sign
        displayName: 'Sign Artifacts'
        steps:
          - checkout: self
          - task: UseDotNet@2
            displayName: 'Install .NET SDK'
            inputs:
              packageType: 'sdk'
              useGlobalJson: true

          - powershell: ./build.ps1
            displayName: 'Update Release Notes'
          
          - script: 'dotnet pack --configuration $(buildConfiguration) -o ./bin/nuget'
            displayName: 'Build Package'
          
          - script: 'dotnet tool install -g SignClient --version 1.2.109'
            displayName: 'Install SignClient'

          - powershell: |
              echo "Starting the signing process..."
              ./scripts/signPackages.ps1 -ConfigPath "./scripts/signsettings.json" `
                -UserName "$(signingUsername)" `
                -Password "$(signingPassword)" `
                -ProductName "TurboMqtt" `
                -ProductDescription "TurboMqtt tools and drivers by Petabridge." `
                -ProductUrl "$(productUrl)" `
                -DirectoryPath "./bin/nuget"
            displayName: 'Sign Artifacts'

          - script: 'dotnet nuget push "bin\nuget" --api-key $(sdkbinKey) --source $(sdkbinUri)'
            displayName: 'Push to SdkBin'

          - script: 'dotnet nuget push "bin\nuget" --api-key $(NUGET_KEY) --source https://api.nuget.org/v3/index.json'
            displayName: 'Push to NuGet.org'


          - task: GitHubRelease@0
            displayName: 'GitHub release (create)'
            inputs:
              gitHubConnection: $(githubConnectionName)
              repositoryName: $(githubRepositoryName)
              title: '$(projectName) v$(Build.SourceBranchName)'
              releaseNotesFile: 'RELEASE_NOTES.md'
              assets: |
                bin\nuget\*.nupkg
